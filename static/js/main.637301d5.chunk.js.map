{"version":3,"sources":["core/serviceWorker.ts","assets/icons/moon.svg","components/styled/title/index.ts","styles/media.ts","styles/global.ts","styles/theme.ts","components/styled/gridItem/index.ts","components/styled/grid/index.ts","components/styled/layout/index.ts","components/styled/paragraph/index.ts","components/styled/button/index.ts","components/styled/toggleButton/index.ts","components/block/index.tsx","constants/index.ts","global/index.ts","utils/grid.ts","utils/shuffle.ts","utils/checkValue.ts","utils/identifySquare.ts","utils/game.ts","utils/solveGrid.ts","components/sudokuGrid/index.tsx","components/numberGroup/index.tsx","components/difficulty/index.tsx","components/configGroup/index.tsx","assets/icons/sun.svg","slices/gridSlice.ts","utils/checkSolution.ts","slices/userPrefSlice.ts","components/game/index.tsx","app/App.tsx","app/rootReducer.ts","app/store.ts","worker/sudoku.worker.ts","utils/localStorage.ts","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","_path","_circle","_path2","_path3","_path4","_path5","_path6","_g","_path7","Title","styled","h1","theme","css","colors","colorPrimary","size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","GlobalStyles","createGlobalStyle","background","lightTheme","colorSecondary","colorBlue","colorBlueLight","colorWhite","colorRed","colorRedLight","colorGreen","colorGreenLight","colorGreyLight","colorGreyDark","transition","darkTheme","GridItem","button","status","active","correct","incorrect","normal","highlight","getBgColor","getColor","Grid","Container","div","SubGrid","SubGridItem","Layout","Paragraph","p","Button","rgba","DarkToggleButton","mode","Block","row","col","value","selectBlock","handleClick","useCallback","onClick","NUMBERS","difficultyLevels","globals","counter","numbers","getRowIndex","index","gridSize","Math","floor","getColIndex","getEmptyIndex","grid","i","j","removeNumbersFromGrid","completeGrid","attempts","copyGrid","removedBlocks","randomNumberGenerator","backup","gridCopy","solveGrid","createFullGrid","Array","fill","map","fillGrid","emptyIndex","shuffledNumbers","shuffle","isValidInsert","number","random","array","arrayCopy","n","length","args","includes","isInGridRow","isInGridColumn","identifyWorkingSquare","flat","isInGridSquare","square","rowLowerLimit","r","c","push","slice","isUserFillableBlock","challengeGrid","isCorrectValue","solvedGrid","isBlockEmpty","SudokuGrid","onNumberSelected","getStatus","selectedBlock","renderBlock","subGridIndex","blockIndex","GRID_SIZE","getGridRowIndex","getGridColIndex","data-cy","useMouseTrap","forEach","Children","toArray","_","StyledNumberGroup","NumberButton","NumberGroup","React","evt","DifficultyContainer","StyledButton","Difficulty","currentLevel","setDifficulty","level","toUpperCase","ConfigurationContainer","ConfigurationGroup","startNewGame","resetGame","toggleHideClues","startNewGameDebounced","debounce","_extends","Object","assign","target","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref","svgRef","title","props","createElement","height","viewBox","width","ref","d","cx","cy","ForwardRef","forwardRef","initialState","easy","medium","hard","expert","activeGrid","remainingBlocks","actualRemainingBlocks","createNewGame","difficulty","loading","hideClues","victoryModalOpen","moves","gridSlice","createSlice","name","reducers","action","payload","closeModal","startLoading","fillBlock","previousValue","userGrid","solutionGrid","userList","every","checkSolution","newGameFromWorker","type","worker","successActionType","actions","toString","gridReducer","reducer","userPrefSlice","setTheme","userPrefReducer","Modal","setAppElement","GameContainer","main","ModalContainer","ModalButton","ModalCloseButton","ModalParagraph","Game","dispatch","useDispatch","useSelector","currentDifficulty","isLoading","modalOpened","totalMoves","selectBlockAction","block","newGameAction","resetGameAction","closeModalAction","toggleHideCluesAction","setDifficultyAction","isInSameCol","isInSameRow","colLowerLimit","colUpperLimit","rowUpperLimit","isInSameSquare","isNeighbor","parseInt","isOpen","onRequestClose","shouldCloseOnOverlayClick","shouldCloseOnEsc","style","content","top","left","padding","right","bottom","marginRight","borderRadius","transform","contentLabel","App","userTheme","rootReducer","combineReducers","sudokuWorker","Worker","store","configureStore","devTools","process","preloadedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","middleware","getDefaultMiddleware","applyWorker","subscribe","getState","newGridReducer","stringify","setItem","saveState","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.637301d5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","var _path, _circle, _path2, _path3, _path4, _path5, _path6, _g, _path7;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgMoon = function SvgMoon(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 512,\n    viewBox: \"0 0 64 64\",\n    width: 512,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m43 28c.05-.66.09-1.33.09-2a27.763 27.763 0 0 0 -.44-5.03 25.552 25.552 0 0 0 -2.5-7.51 22.381 22.381 0 0 0 -11.15-10.46 32.934 32.934 0 0 1 24.98 13.11 27.4 27.4 0 0 1 3.75 6.91 24.754 24.754 0 0 1 1.27 4.98z\",\n    fill: \"#d9176c\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 29,\n    cy: 6,\n    fill: \"#9b1e5a\",\n    r: 3\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m58 32a29 29 0 0 1 -29 29 28.275 28.275 0 0 1 -26-17 23.765 23.765 0 0 0 17 7 25.076 25.076 0 0 0 4.75-.46 18.565 18.565 0 0 0 1.99-.46 23.934 23.934 0 0 0 5.26-2.08l-3-6h9.98a25.326 25.326 0 0 0 5.02-10z\",\n    fill: \"#f9bb4b\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m49 45a5.006 5.006 0 0 1 -5-5h2a3 3 0 0 0 6 0h2a5.006 5.006 0 0 1 -5 5z\",\n    fill: \"#394d5c\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m37 54.11a15.652 15.652 0 0 1 -4.9.89c-5.42 0-7.14-3.93-7.35-4.46a18.565 18.565 0 0 0 1.99-.46c.46.97 2.66 4.46 9.63 2.13z\",\n    fill: \"#394d5c\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m57.73 23.02a3.951 3.951 0 0 1 -2.43.84 3.985 3.985 0 0 1 -1.32-7.75 27.4 27.4 0 0 1 3.75 6.91z\",\n    fill: \"#eb8cb3\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m45.84 17.06a4 4 0 0 1 -3.19 3.91 25.552 25.552 0 0 0 -2.5-7.51 3.824 3.824 0 0 1 1.69-.4 4.005 4.005 0 0 1 4 4z\",\n    fill: \"#eb8cb3\"\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"#7fcac9\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m20 42h-5a1 1 0 0 1 -.707-1.707l3.293-3.293h-2.586a1 1 0 0 1 0-2h5a1 1 0 0 1 .707 1.707l-3.293 3.293h2.586a1 1 0 0 1 0 2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m33 32h-6a1 1 0 0 1 -.707-1.707l4.293-4.293h-3.586a1 1 0 0 1 0-2h6a1 1 0 0 1 .707 1.707l-4.293 4.293h3.586a1 1 0 0 1 0 2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m22 22h-8a1 1 0 0 1 -.707-1.707l6.293-6.293h-5.586a1 1 0 0 1 0-2h8a1 1 0 0 1 .707 1.707l-6.293 6.293h5.586a1 1 0 0 1 0 2z\"\n  }))), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m41 28h20v4h-20z\",\n    fill: \"#6f1d48\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgMoon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/moon.3afcf0e0.svg\";\nexport { ForwardRef as ReactComponent };","import styled, { css } from 'styled-components';\n\nexport const Title = styled.h1`\n  ${({ theme }) => css`\n    color: ${theme.colors.colorPrimary};\n    text-align: center;\n    margin-top: 0;\n    text-transform: uppercase;\n    font-size: 4rem;\n    letter-spacing: 3px;\n    font-family: 'Roboto', sans-serif;\n    font-weight: 300;\n  `}\n`;\n","const size = {\n  mobileS: '320px',\n  mobileM: '375px',\n  mobileL: '425px',\n  tablet: '768px',\n  laptop: '1024px',\n  laptopL: '1440px',\n  desktop: '2560px',\n};\n\nexport const device = {\n  mobileS: `(max-width: ${size.mobileS})`,\n  mobileM: `(max-width: ${size.mobileM})`,\n  mobileL: `(max-width: ${size.mobileL})`,\n  tablet: `(max-width: ${size.tablet})`,\n  laptop: `(max-width: ${size.laptop})`,\n  laptopL: `(max-width: ${size.laptopL})`,\n  desktop: `(max-width: ${size.desktop})`,\n  desktopL: `(max-width: ${size.desktop})`,\n};\n","import { createGlobalStyle, css } from 'styled-components';\nimport { device } from './media';\n\nexport const GlobalStyles = createGlobalStyle`\n    ${({ theme }) => css`\n      *,\n      *::before,\n      *::after {\n        margin: 0;\n        padding: 0;\n        box-sizing: inherit;\n      }\n\n      html {\n        font-size: 62.5%;\n\n        @media ${device.tablet} {\n          font-size: 50%;\n        }\n\n        @media ${device.mobileM} {\n          font-size: 45%;\n        }\n\n        @media ${device.mobileM} {\n          font-size: 40%;\n        }\n\n        @media ${device.mobileS} {\n          font-size: 35%;\n        }\n      }\n\n      html,\n      body {\n        height: 100vh;\n        width: 100%;\n      }\n\n      #root {\n        height: inherit;\n        width: inherit;\n        display: flex;\n        justify-content: center;\n      }\n\n      body {\n        box-sizing: border-box;\n        font-family: 'Roboto', sans-serif;\n        line-height: 1.7;\n        background: ${theme.colors.background};\n        color: ${theme.colors.colorPrimary};\n      }\n    `}\n`;\n","export const lightTheme = {\n  colors: {\n    background: 'white',\n    colorPrimary: '#282c34',\n    colorSecondary: '',\n    colorBlue: '#a0e9fd',\n    colorBlueLight: '#caf3fe',\n    colorWhite: 'white',\n    colorRed: '#d92027',\n    colorRedLight: '#f7cfd6',\n    colorGreen: '#79d70f',\n    colorGreenLight: '#bbf1c8',\n    colorGreyLight: '#edf4f2',\n    colorGreyDark: '#888888',\n  },\n  transition: {\n    transition: 'all 0.1s ease-in',\n  },\n};\n\nexport const darkTheme = {\n  colors: {\n    background: 'rgb(24, 26, 27)',\n    colorPrimary: 'rgb(203, 198, 192)',\n    colorSecondary: '',\n    colorBlue: 'rgb(2, 65, 82)',\n    colorBlueLight: 'rgba(2, 65, 82)',\n    colorWhite: 'rgb(24, 26, 27)',\n    colorRed: 'rgb(226, 59, 65)',\n    colorRedLight: 'rgb(73, 12, 23)',\n    colorGreen: 'rgb(98, 174, 12)',\n    colorGreenLight: 'rgb(17, 83, 46)',\n    colorGreyLight: 'rgb(26, 42, 39)',\n    colorGreyDark: 'rgb(157, 148, 136)',\n  },\n  transition: {\n    transition: 'all 0.1s ease-in',\n  },\n};\n","import styled, { DefaultTheme } from 'styled-components';\n\nimport { GridItemProps, Status } from 'types';\nimport { device } from 'styles';\n\nconst getBgColor = (status: Status, theme: DefaultTheme) => {\n  const bgColors = {\n    active: theme.colors.colorBlueLight,\n    correct: theme.colors.colorGreenLight,\n    incorrect: theme.colors.colorRedLight,\n    normal: theme.colors.colorWhite,\n    highlight: theme.colors.colorGreyLight,\n  };\n\n  return bgColors[status];\n};\n\nconst getColor = (status: Status, theme: DefaultTheme) => {\n  const colors = {\n    active: theme.colors.colorPrimary,\n    correct: theme.colors.colorGreen,\n    incorrect: theme.colors.colorRed,\n    normal: theme.colors.colorPrimary,\n    highlight: theme.colors.colorPrimary,\n  };\n\n  return colors[status];\n};\n\nexport const GridItem = styled.button<GridItemProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 300;\n  outline: none;\n  user-select: none;\n  background-color: ${({ status, theme }) => getBgColor(status, theme)};\n  color: ${({ status, theme }) => getColor(status, theme)};\n  padding: 1rem;\n  font-size: 3rem;\n  cursor: pointer;\n  border: none;\n  transition: ${({ theme }) => theme.transition.transition};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.colorBlueLight};\n  }\n\n  @media ${device.mobileM} {\n    font-size: 2.5rem;\n  }\n`;\n","import styled from 'styled-components';\n\nimport { device } from 'styles';\n\nconst Container = styled.div`\n  background: ${({theme}) => theme.colors.colorPrimary};\n  display: inline-block;\n  border-color: ${({theme}) => theme.colors.colorPrimary};\n  border-style: solid;\n  border-width: 3px 5px 5px 3px;\n\n  @media ${device.mobileL} {\n    border-width: 2px 4px 4px 2px\n  }\n\n  @media ${device.mobileS} {\n    border-width: 2px 4px 3px 2px;\n  }\n`;\n\nconst SubGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 15rem);\n  grid-template-rows: repeat(3, 15rem);\n  grid-gap: 5px;\n\n  @media ${device.mobileL} {\n    grid-template-columns: repeat(3, 12rem);\n    grid-template-rows: repeat(3, 12rem);\n    grid-gap: 4px;\n  }\n`;\n\nconst SubGridItem = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 5rem);\n  grid-template-rows: repeat(3, 5rem);\n  grid-gap: 1px;\n\n  @media ${device.mobileL} {\n    grid-template-columns: repeat(3, 4rem);\n    grid-template-rows: repeat(3, 4rem);\n    grid-gap: 1px;\n  }\n`;\n\ninterface IGrid {\n  Container: typeof Container;\n  SubGrid: typeof SubGrid;\n  SubGridItem: typeof SubGridItem;\n}\n\nexport const Grid: IGrid = {\n  Container,\n  SubGrid,\n  SubGridItem,\n};\n","import styled from 'styled-components';\n\nexport const Layout = styled.div`\n  background-color: ${({ theme }) => theme.colors.colorWhite};\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import styled from 'styled-components';\n\n\nexport const Paragraph = styled.p`\n  font-weight: 100;\n  margin-top: 1.2rem;\n  font-size: 2rem;\n  color: ${({theme}) => theme.colors.colorGreyDark};\n  justify-self: center;\n`;\n","import styled from 'styled-components';\nimport { rgba } from 'polished';\n\nexport const Button = styled.button`\n  outline: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 300;\n  outline: none;\n  margin-right: 1.5rem;\n  user-select: none;\n  background-color: ${({ theme }) => theme.colors.colorWhite};\n  color: ${({ theme }) => theme.colors.colorPrimary};\n  font-size: 3rem;\n  border: ${({ theme }) => `1px solid ${theme.colors.colorGreen}`};\n  cursor: pointer;\n  transition: ${({ theme }) => theme.transition.transition};\n\n  &:hover {\n    background-color: ${({ theme }) => rgba(theme.colors.colorGreenLight, .3)};\n  }\n`;\n","import styled from 'styled-components';\n\nimport { Button } from '../button';\nimport { UserTheme } from 'types';\nimport { device } from 'styles';\n\ninterface IToggleProps {\n  mode: UserTheme;\n}\n\nexport const DarkToggleButton = styled(Button)<IToggleProps>`\n  position: fixed;\n  top: 1rem;\n  right: 1rem;\n  border: none;\n  background-color: transparent;\n\n  @media ${device.mobileL} {\n    top: 1.2rem;\n    right: 0rem;\n  }\n\n  &:hover {\n    background-color: transparent;\n  }\n\n  svg {\n    height: auto;\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 4.5rem;\n    transition: all 0.2s linear;\n\n    @media ${device.mobileL} {\n      width: 3.5rem;\n  }\n\n  @media ${device.mobileM} {\n      width: 3rem;\n  }\n    \n    // sun \n    &:first-child {\n      transform: ${({ mode }) => mode === 'dark' && `translateX(30rem)`};\n    }\n    \n    // moon \n    &:nth-child(2) {\n      transform: ${({ mode }) => mode === 'light' && `translateX(30rem)`};\n    }\n`;\n","import React, { FC, useCallback } from 'react';\n\nimport { GridItem } from 'components/styled';\nimport { ISelectBlock } from 'components/game';\nimport { GridItemProps } from 'types';\n\ninterface IBlock extends GridItemProps {\n  selectBlock: ISelectBlock;\n}\n\nexport const Block: FC<IBlock> = ({ row, col, value, status, selectBlock }) => {\n\n  const handleClick = useCallback(() => {\n    status !== 'active' &&\n      selectBlock({\n        row,\n        col,\n      });\n  }, [status, row, col, selectBlock]);\n\n  return (\n    <GridItem\n      onClick={handleClick}\n      row={row}\n      col={col}\n      status={status}\n      value={value}\n    >\n      {value === 0 ? '' : value}\n    </GridItem>\n  );\n};\n","export const GRID_SIZE = 9;\nexport const EMPTY_VALUE = 0;\nexport const REMOVE_NUMBERS_COUNT = 32;\nexport const ATTEMPT_EASY = 3;\nexport const ATTEMPT_MEDIUM = 4;\nexport const ATTEMPT_HARD = 5;\nexport const ATTEMPT_EXPERT = 10;\nexport const NUMBERS = ['1', '2', '3', '4', '5', '6', '7', '8', '9'];\nexport const difficultyLevels: ['easy', 'medium', 'hard', 'expert'] = ['easy', 'medium', 'hard', 'expert'];\n","export const globals = {\n  counter: 0,\n};\n","import { Grid, Numbers } from 'types';\nimport { GRID_SIZE, EMPTY_VALUE } from '../constants';\nimport {\n  shuffle,\n  randomNumberGenerator,\n  isValidInsert,\n  solveGrid,\n} from 'utils';\nimport { globals } from 'global';\n\nconst numbers: Numbers[] = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nexport const getRowIndex = (index: number, gridSize: number) =>\n  Math.floor(index / gridSize);\n\nexport const getColIndex = (index: number, gridSize: number) =>\n  index % gridSize;\n\n/**\n * Creates and returns and empty grid\n * @returns {Grid} returns newly created grid\n */\nexport const buildEmptyGrid = (): Grid =>\n  Array(GRID_SIZE)\n    .fill(EMPTY_VALUE)\n    .map(() => Array(GRID_SIZE).fill(EMPTY_VALUE)) as Grid;\n\n\nexport const getEmptyIndex = (grid: Grid) => {\n  for (let i = 0; i < GRID_SIZE; i++) {\n    for (let j = 0; j < GRID_SIZE; j++) {\n      if (grid[i][j] === EMPTY_VALUE) {\n        return [i, j];\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * A backtracking / recursive function to check all possible combinations\n * of numbers till a solution is found.\n * @param {Grid} grid\n */\nexport const fillGrid = (grid: Grid) => {\n  const emptyIndex = getEmptyIndex(grid);\n  if (!emptyIndex) {\n    return true;\n  }\n\n  let [row, col] = emptyIndex;\n  const shuffledNumbers = shuffle<Numbers>(numbers);\n  for (let value of shuffledNumbers) {\n    const args = { grid, row, col, value };\n    if (isValidInsert(args)) {\n      grid[row][col] = value;\n      if (fillGrid(grid)) {\n        return true;\n      }\n      grid[row][col] = EMPTY_VALUE;\n    }\n  }\n  return false;\n};\n\n/**\n * Removes numbers from a full grid to create a Sudoku Puzzle.\n * @param {Grid} completeGrid\n * @param {number} attempts - number of attempts to solve (higher means more difficult) - default 5\n */\nexport const removeNumbersFromGrid = (\n  completeGrid: Grid,\n  attempts: number = 5\n) => {\n  const grid = copyGrid(completeGrid);\n  let removedBlocks = 0;\n\n  while (attempts > 0) {\n    let row = randomNumberGenerator(GRID_SIZE);\n    let col = randomNumberGenerator(GRID_SIZE);\n\n    while (grid[row][col] === 0) {\n      row = randomNumberGenerator(GRID_SIZE);\n      col = randomNumberGenerator(GRID_SIZE);\n    }\n\n    const backup = grid[row][col];\n    grid[row][col] = 0;\n\n    const gridCopy = copyGrid(grid);\n\n    globals.counter = 0;\n    solveGrid(gridCopy);\n    if (globals.counter !== 1) {\n      grid[row][col] = backup;\n      attempts--;\n    } else {\n      removedBlocks++;\n    }\n  }\n\n  return { grid, removedBlocks };\n};\n\n/**\n * Creates an empty grid and fills it with values\n * @return {Grid}\n */\nexport const createFullGrid = () => {\n  const grid = buildEmptyGrid();\n  fillGrid(grid);\n  return grid;\n};\n\n/**\n * Copies the current grid and returns a new Grid\n * @param {Grid} grid\n * @return {Grid}\n */\nexport const copyGrid = (grid: Grid) => {\n  return grid.map(row => [...row]) as Grid;\n};\n","/**\n * Generates a random number between 0 and specified number\n * @param number - Specify the endLimit\n */\nexport const randomNumberGenerator = (number: number) => {\n  return Math.floor(Math.random() * number);\n};\n\n/**\n * Fisher-Yates Array shuffling algorithm\n * @param array\n */\nexport const shuffle = <T extends any>(array: T[]): T[] => {\n  let arrayCopy = [...array];\n  let n = arrayCopy.length;\n\n  while (n) {\n    let i = randomNumberGenerator(n--);\n    [arrayCopy[i], arrayCopy[n]] = [arrayCopy[n], arrayCopy[i]];\n  }\n  return arrayCopy;\n};\n","import { Grid, Numbers } from 'types';\nimport { identifyWorkingSquare } from 'utils';\n\ninterface IsNumberInGrid {\n  grid: Grid;\n  value: Numbers;\n}\n\ninterface NumberInGridRow extends IsNumberInGrid {\n  row: number;\n}\n\ninterface NumberInGridCol extends IsNumberInGrid {\n  col: number;\n}\n\ninterface NumberInGridSquare\n  extends IsNumberInGrid,\n    NumberInGridRow,\n    NumberInGridCol {}\n\n/**\n * Check if value is in the grid row\n * @param param0\n */\nexport const isInGridRow = ({ grid, row, value }: NumberInGridRow): boolean =>\n  grid[row].includes(value);\n\n/**\n * Check if value is in the grid column\n * @param param0\n */\nexport const isInGridColumn = ({\n  grid,\n  col,\n  value,\n}: NumberInGridCol): boolean => {\n  for (let i = 0; i < grid.length; i++) {\n    if (grid[i][col] === value) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Check if value is in the current grid square\n * @param param0\n */\nexport const isInGridSquare = ({\n  grid,\n  row,\n  col,\n  value,\n}: NumberInGridSquare): boolean => {\n  const workingSquare = identifyWorkingSquare({ grid, col, row });\n  return workingSquare.flat(1).includes(value);\n};\n\nexport const isValidInsert = (args: NumberInGridSquare) => {\n  return !isInGridRow(args) && !isInGridColumn(args) && !isInGridSquare(args);\n};\n","import { Square, Grid } from 'types';\n\ninterface IdentifySquare {\n  grid: Grid;\n  row: number;\n  col: number;\n}\n\n/**\n * Identifies the current working square of a 9x9 grid\n * @param identifySquare  \n */\nexport const identifyWorkingSquare = ({\n  grid,\n  col,\n  row,\n}: IdentifySquare): Square => {\n  const square = [];\n  const colLowerLimit = col < 3 ? 0 : col < 6 ? 3 : 6;\n  const rowLowerLimit = row < 3 ? 0 : row < 6 ? 3 : 6;\n\n  for (let r = rowLowerLimit, c = colLowerLimit; r < rowLowerLimit + 3; r++) {\n    square.push(grid[r].slice(c, c + 3));\n  }\n\n  return square as Square;\n};\n","import { createFullGrid, removeNumbersFromGrid, copyGrid } from 'utils';\nimport {\n  ATTEMPT_EASY,\n  ATTEMPT_MEDIUM,\n  ATTEMPT_HARD,\n  ATTEMPT_EXPERT,\n  EMPTY_VALUE,\n  GRID_SIZE,\n} from '../constants';\n\nimport { Grid, Block, Row, FilledBlock, difficultyLevel } from 'types';\n\nlet wasmGrid: any = null;\n\nexport const createNewGame = (level: difficultyLevel = 'easy') => {\n  const attempts = {\n    easy: ATTEMPT_EASY,\n    medium: ATTEMPT_MEDIUM,\n    hard: ATTEMPT_HARD,\n    expert: ATTEMPT_EXPERT,\n  };\n\n  const solvedGrid = createFullGrid();\n  const { grid: challengeGrid, removedBlocks } = removeNumbersFromGrid(\n    solvedGrid,\n    attempts[level]\n  );\n  const activeGrid = copyGrid(challengeGrid);\n\n  return {\n    challengeGrid,\n    solvedGrid,\n    activeGrid,\n    remainingBlocks: removedBlocks,\n    actualRemainingBlocks: removedBlocks,\n  };\n};\n\nexport const createNewGameFromWasm = async (\n  level: difficultyLevel = 'easy'\n) => {\n  wasmGrid =\n    wasmGrid ||\n    (await import('wasm')\n      .then(res => res.wasmGrid)\n      .catch(err => {\n        throw new Error(\n          `Error occurred while importing web assembly module: ${err}`\n        );\n      }));\n\n  const grid2d = (blocks: Uint32Array) => {\n    let arr = [];\n    for (let i = 0; i < GRID_SIZE * GRID_SIZE; i = i + 9) {\n      arr.push(Array.prototype.slice.call(blocks,i, i + GRID_SIZE) as Row);\n    }\n    return arr;\n  };\n\n  wasmGrid.clear();\n  wasmGrid.set_difficulty(level);\n  wasmGrid.solve();\n  const solvedGrid = grid2d(wasmGrid.get_blocks_array()) as Grid;\n  wasmGrid.generate_puzzle();\n  const challengeGrid = grid2d(wasmGrid.get_blocks_array()) as Grid;\n  const activeGrid = grid2d(wasmGrid.get_blocks_array()) as Grid;\n  const remainingBlocks = wasmGrid.get_removed_blocks_count();\n  const actualRemainingBlocks = remainingBlocks;\n  return {\n    challengeGrid,\n    solvedGrid,\n    activeGrid,\n    remainingBlocks,\n    actualRemainingBlocks,\n  };\n};\n\nexport const isUserFillableBlock = (\n  { row, col }: Block,\n  challengeGrid: Grid\n) => {\n  return challengeGrid[row][col] === EMPTY_VALUE;\n};\n\nexport const isCorrectValue = (\n  { row, col, value }: FilledBlock,\n  solvedGrid: Grid\n) => {\n  return value === solvedGrid[row][col];\n};\n\nexport const isBlockEmpty = (value: number) => {\n  return value === EMPTY_VALUE;\n};\n\nconst isInSameRow = (selectedBlock: Block, block: Block) => {\n  return selectedBlock.row === block.row;\n};\n\nconst isInSameCol = (selectedBlock: Block, block: Block) => {\n  return selectedBlock.col === block.col;\n};\n\nconst isInSameSquare = (selectedBlock: Block, block: Block) => {\n  const colLowerLimit =\n    selectedBlock.col < 3 ? 0 : selectedBlock.col < 6 ? 3 : 6;\n  const colUpperLimit = colLowerLimit + 3;\n  const rowLowerLimit =\n    selectedBlock.row < 3 ? 0 : selectedBlock.row < 6 ? 3 : 6;\n  const rowUpperLimit = rowLowerLimit + 3;\n  return (\n    block.row >= rowLowerLimit &&\n    block.row < rowUpperLimit &&\n    block.col >= colLowerLimit &&\n    block.col < colUpperLimit\n  );\n};\n\nexport const isNeighbor = (selectedBlock: Block, block: Block) => {\n  return (\n    !(selectedBlock.row === block.row && selectedBlock.col === block.col) &&\n    (isInSameCol(selectedBlock, block) ||\n      isInSameRow(selectedBlock, block) ||\n      isInSameSquare(selectedBlock, block))\n  );\n};\n\n\n","import { globals } from 'global';\nimport { Grid, Numbers } from 'types';\nimport { isValidInsert, getEmptyIndex } from 'utils';\nimport { EMPTY_VALUE } from '../constants';\n\n/**\n * A backtracking/recursive function to check all possible combinations of numbers until a solution is found\n * @param grid A 9X9 array consisting of values from 0-9)\n */\nexport const solveGrid = (grid: Grid) => {\n  const emptyIndex = getEmptyIndex(grid);\n  if (!emptyIndex) {\n    globals.counter++;\n    return false;\n  }\n\n  let [row, col] = emptyIndex;\n  for (let value = 1 as Numbers; value <= 9 && globals.counter < 2; value++) {\n    const args = { grid, row, col, value };  \n    if (isValidInsert(args)) {\n      grid[row][col] = value;\n      if (solveGrid(grid)) {\n        return true;\n      }\n      grid[row][col] = EMPTY_VALUE;\n    }\n  }\n  return false;\n};\n\n\nexport default solveGrid;\n","import React, { FC, Children } from 'react';\nimport useMouseTrap from 'react-hook-mousetrap';\n\nimport { Block } from 'components/block';\nimport { Grid } from 'components/styled';\nimport { getRowIndex, getColIndex } from 'utils';\nimport { Block as IBlock, Grid as IGrid } from 'types';\nimport { GRID_SIZE, NUMBERS } from '../../constants';\nimport { INumberSelected, IGetStatus, ISelectBlock } from 'components/game';\n\ninterface ISudokuGrid {\n  onNumberSelected: INumberSelected;\n  getStatus: IGetStatus;\n  selectedBlock: IBlock | null;\n  selectBlock: ISelectBlock;\n  grid: IGrid;\n}\n\nexport const SudokuGrid: FC<ISudokuGrid> = ({\n  onNumberSelected,\n  getStatus,\n  grid,\n  selectBlock,\n  selectedBlock,\n}) => {\n  const moveDown = () => {\n    if (selectedBlock && selectedBlock.row < GRID_SIZE - 1) {\n      selectBlock({ row: selectedBlock.row + 1, col: selectedBlock.col });\n    }\n  };\n\n  const moveLeft = () => {\n    if (selectedBlock && selectedBlock.col > 0) {\n      selectBlock({ row: selectedBlock.row, col: selectedBlock.col - 1 });\n    }\n  };\n\n  const moveRight = () => {\n    if (selectedBlock && selectedBlock.col < GRID_SIZE - 1) {\n      selectBlock({ row: selectedBlock.row, col: selectedBlock.col + 1 });\n    }\n  };\n\n  const moveUp = () => {\n    if (selectedBlock && selectedBlock.row > 0) {\n      selectBlock({ row: selectedBlock.row - 1, col: selectedBlock.col });\n    }\n  };\n\n  const getGridRowIndex = (subGridIndex: number, blockIndex: number) =>\n    getRowIndex(blockIndex, GRID_SIZE / 3) +\n    getRowIndex(subGridIndex, GRID_SIZE / 3) * 3;\n\n  const getGridColIndex = (subGridIndex: number, blockIndex: number) =>\n    getColIndex(blockIndex, GRID_SIZE / 3) +\n    getColIndex(subGridIndex, GRID_SIZE / 3) * 3;\n\n  const renderBlock = (subGridIndex: number, blockIndex: number) => {\n    const row = getGridRowIndex(subGridIndex, blockIndex);\n    const col = getGridColIndex(subGridIndex, blockIndex);\n\n    return (\n      <Block\n        data-cy=\"grid-item\"\n        row={row}\n        col={col}\n        status={getStatus({ row, col, value: grid[row][col] })}\n        selectBlock={selectBlock}\n        value={grid[row][col]}\n      />\n    );\n  };\n\n  useMouseTrap('up', moveUp);\n  useMouseTrap('down', moveDown);\n  useMouseTrap('left', moveLeft);\n  useMouseTrap('right', moveRight);\n\n  NUMBERS.forEach(number => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useMouseTrap(number, () => {\n      onNumberSelected(number);\n    });\n  });\n\n  return (\n    <Grid.Container>\n      <Grid.SubGrid>\n        {Children.toArray(\n          [...Array(GRID_SIZE)].map((_, subGridIndex) => (\n            <Grid.SubGridItem>\n              {Children.toArray(\n                [...Array(GRID_SIZE)].map((_, blockIndex) =>\n                  renderBlock(subGridIndex, blockIndex)\n                )\n              )}\n            </Grid.SubGridItem>\n          ))\n        )}\n      </Grid.SubGrid>\n    </Grid.Container>\n  );\n};\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport { INumberSelected } from 'components/game';\nimport { Button } from 'components/styled/button';\nimport { NUMBERS } from '../../constants';\nimport { device } from 'styles';\n\ninterface INumberGroup {\n  onNumberSelected: INumberSelected;\n}\n\nconst StyledNumberGroup = styled.div`\n  display: grid;\n  grid-template-columns: repeat(9, 5rem);\n  grid-template-rows: 5rem;\n  grid-gap: 2px;\n  margin-top: 2.5rem;\n  justify-content: center;\n\n  @media ${device.mobileL} {\n    margin-top: 2rem;\n    grid-template-columns: repeat(9, 4rem);\n    grid-template-rows: 4rem;\n    grid-gap: 1px;\n  }\n`;\n\nconst NumberButton = styled(Button)`\n  border: ${({ theme }) => `1px solid ${theme.colors.colorPrimary}`};\n  margin: 0;\n  border-left: ${({ theme }) => `1px solid ${theme.colors.colorPrimary}`};\n\n  &:last-child {\n    border-right: ${({ theme }) => `1px solid ${theme.colors.colorPrimary}`};\n  }\n\n  @media ${device.mobileL} {\n    font-size: 2.5rem;\n  }\n`;\n\nexport const NumberGroup: FC<INumberGroup> = ({ onNumberSelected }) => {\n  return (\n    <StyledNumberGroup>\n      {React.Children.toArray(\n        NUMBERS.map(number => (\n          <NumberButton onClick={evt => onNumberSelected(number)}>\n            {number}\n          </NumberButton>\n        ))\n      )}\n    </StyledNumberGroup>\n  );\n};\n","import React, { FC, Children } from 'react';\nimport styled from 'styled-components';\nimport { rgba } from 'polished';\n\nimport { Button as StyledButton } from 'components/styled/button';\nimport { ISetDifficulty } from '../game';\nimport { difficultyLevel } from 'types';\nimport { difficultyLevels } from '../../constants';\nimport { device } from 'styles';\n\ninterface IDifficultyContainer {\n  currentLevel: difficultyLevel;\n  setDifficulty: ISetDifficulty;\n}\n\ninterface IDifficultyButton {\n  active: boolean;\n}\n\nconst DifficultyContainer = styled.div`\n  display: flex;\n  margin: 3.5rem;\n  justify-content: center;\n\n  @media ${device.mobileL} {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nconst Button = styled(StyledButton)<IDifficultyButton>`\n  padding: 0.5rem 1.5rem;\n  font-size: 1.8rem;\n  text-transform: uppercase;\n  border: none;\n  border-bottom: ${({ theme, active }) =>\n    active ? `2px solid ${theme.colors.colorGreen}` : `2px solid ${theme.colors.colorWhite}`};\n  &:hover {\n    background-color: ${({ theme }) => rgba(theme.colors.colorGreenLight, .2)};\n  }\n\n  @media ${device.mobileL} {\n    margin-bottom: .5rem;\n  }\n`;\n\nexport const Difficulty: FC<IDifficultyContainer> = ({\n  currentLevel,\n  setDifficulty,\n}) => {\n  return (\n    <DifficultyContainer>\n      {Children.toArray(\n        difficultyLevels.map(level => (\n          <Button\n            active={level === currentLevel}\n            onClick={() => setDifficulty(level)}\n          >\n            {level.toUpperCase()}\n          </Button>\n        ))\n      )}\n    </DifficultyContainer>\n  );\n};\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\nimport debounce from 'lodash.debounce';\n\nimport { Button as StyledButton } from 'components/styled/button';\nimport { IStartNewGame, IResetGame, IToggleHideClues } from 'components/game';\nimport { device } from 'styles';\n\ninterface IConfigurationContainer {\n  startNewGame: IStartNewGame;\n  resetGame: IResetGame;\n  toggleHideClues: IToggleHideClues;\n}\n\nconst ConfigurationContainer = styled.div`\n  display: flex;\n  margin: 2.5rem;\n  justify-content: center;\n\n  @media ${device.mobileL} {\n    flex-direction: column;\n  }\n`;\n\nconst Button = styled(StyledButton)`\n  padding: 1rem 2.5rem;\n  font-size: 2rem;\n  text-transform: uppercase;\n  @media ${device.mobileL} {\n    margin-bottom: 1.5rem;\n  }\n`;\n\nexport const ConfigurationGroup: FC<IConfigurationContainer> = ({\n  startNewGame,\n  resetGame,\n  toggleHideClues,\n}) => {\n  const startNewGameDebounced = debounce(startNewGame, 300);\n\n  return (\n    <ConfigurationContainer>\n      <Button onClick={startNewGameDebounced}>New</Button>\n      <Button onClick={resetGame}>Reset</Button>\n      <Button onClick={toggleHideClues}>Toggle Clues</Button>\n    </ConfigurationContainer>\n  );\n};\n","var _path, _path2, _path3, _g;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgSun = function SvgSun(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: \"511.99986pt\",\n    viewBox: \"0 0 511.99986 511.99986\",\n    width: \"511.99986pt\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m477.449219 256c0-21.75 39.410156-48.386719 34.050781-68.449219-5.550781-20.757812-53.15625-24.101562-63.671875-42.277343-10.667969-18.433594 10.125-61.304688-4.835937-76.265626-14.960938-14.960937-57.832032 5.828126-76.269532-4.835937-18.171875-10.515625-21.515625-58.121094-42.273437-63.671875-20.0625-5.359375-46.699219 34.050781-68.449219 34.050781s-48.386719-39.410156-68.449219-34.050781c-20.757812 5.550781-24.101562 53.15625-42.277343 63.671875-18.433594 10.667969-61.304688-10.125-76.265626 4.835937-14.960937 14.960938 5.828126 57.832032-4.835937 76.269532-10.515625 18.171875-58.121094 21.515625-63.671875 42.273437-5.359375 20.0625 34.050781 46.699219 34.050781 68.449219s-39.410156 48.386719-34.050781 68.449219c5.550781 20.757812 53.15625 24.101562 63.671875 42.277343 10.667969 18.433594-10.125 61.304688 4.835937 76.265626 14.960938 14.960937 57.832032-5.828126 76.269532 4.835937 18.171875 10.515625 21.515625 58.121094 42.273437 63.671875 20.0625 5.359375 46.699219-34.050781 68.449219-34.050781s48.386719 39.410156 68.449219 34.050781c20.757812-5.550781 24.101562-53.15625 42.277343-63.671875 18.433594-10.667969 61.304688 10.125 76.265626-4.835937 14.960937-14.960938-5.828126-57.832032 4.835937-76.269532 10.515625-18.171875 58.121094-21.515625 63.671875-42.273437 5.359375-20.0625-34.050781-46.699219-34.050781-68.449219zm0 0\",\n    fill: \"#ffee8c\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m426.957031 256c0 86.347656-64.019531 157.746094-147.191406 169.3125-7.765625 1.089844-15.695313 1.640625-23.761719 1.640625-94.417968 0-170.96875-76.539063-170.96875-170.953125 0-94.417969 76.550782-170.957031 170.96875-170.957031 8.066406 0 15.996094.554687 23.761719 1.640625 83.171875 11.566406 147.191406 82.964844 147.191406 169.316406zm0 0\",\n    fill: \"#f28f44\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m426.957031 256c0 86.347656-64.019531 157.746094-147.191406 169.3125-83.175781-11.566406-147.195313-82.964844-147.195313-169.3125 0-86.351562 64.019532-157.75 147.195313-169.316406 83.171875 11.566406 147.191406 82.964844 147.191406 169.316406zm0 0\",\n    fill: \"#ffd073\"\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"#cc9236\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m155.875 229.488281c-2.003906 0-4.011719-.765625-5.539062-2.296875-3.0625-3.0625-3.0625-8.023437 0-11.082031 17.53125-17.53125 46.054687-17.53125 63.582031 0 3.0625 3.058594 3.0625 8.019531 0 11.082031-3.058594 3.058594-8.019531 3.058594-11.082031 0-11.417969-11.421875-29.996094-11.421875-41.417969 0-1.53125 1.53125-3.535157 2.296875-5.542969 2.296875zm0 0\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m356.125 229.488281c-2.007812 0-4.011719-.765625-5.542969-2.296875-11.417969-11.421875-30-11.417968-41.417969 0-3.0625 3.058594-8.023437 3.058594-11.082031 0-3.0625-3.0625-3.0625-8.023437 0-11.082031 17.527344-17.53125 46.054688-17.53125 63.585938 0 3.058593 3.058594 3.058593 8.023437 0 11.082031-1.53125 1.53125-3.539063 2.296875-5.542969 2.296875zm0 0\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m256 310.582031c-17.015625 0-33.015625-6.628906-45.046875-18.660156-3.058594-3.0625-3.058594-8.023437 0-11.082031 3.0625-3.0625 8.023437-3.0625 11.082031 0 9.074219 9.070312 21.132813 14.066406 33.964844 14.066406s24.890625-4.996094 33.964844-14.066406c3.058594-3.0625 8.023437-3.0625 11.082031 0 3.058594 3.058594 3.058594 8.019531 0 11.082031-12.03125 12.03125-28.03125 18.660156-45.046875 18.660156zm0 0\"\n  }))));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgSun, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/sun.fe4053b9.svg\";\nexport { ForwardRef as ReactComponent };","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { createNewGame, checkSolution } from 'utils';\nimport { Grid, N, Block, FilledBlock, NewGame, difficultyLevel } from 'types';\n\ninterface GridState {\n  solvedGrid: Grid;\n  challengeGrid: Grid;\n  activeGrid: Grid;\n  selectedBlock: Block | null;\n  moves: number;\n  actualRemainingBlocks: number;\n  remainingBlocks: number;\n  loading: boolean;\n  hideClues: boolean;\n  victoryModalOpen: boolean;\n  difficulty: difficultyLevel;\n}\n\ntype CREATE_NEW_GAME_IN_WORKER = 'CREATE_NEW_GAME_IN_WORKER';\nconst CREATE_NEW_GAME_IN_WORKER = 'CREATE_NEW_GAME_IN_WORKER';\n\nexport interface NewGameWorkerAction {\n  type: CREATE_NEW_GAME_IN_WORKER;\n  worker: boolean;\n  successActionType: string;\n}\n\nconst initialState: GridState = {\n  ...createNewGame(),\n  selectedBlock: null,\n  difficulty: 'easy',\n  loading: false,\n  hideClues: false,\n  victoryModalOpen: false,\n  moves: 0,\n};\n\nconst gridSlice = createSlice({\n  name: 'grid',\n  initialState,\n  reducers: {\n    startNewGame(state, action: PayloadAction<NewGame>) {\n      const {\n        activeGrid,\n        solvedGrid,\n        challengeGrid,\n        remainingBlocks,\n        actualRemainingBlocks,\n      } = action.payload;\n\n      state.activeGrid = activeGrid;\n      state.solvedGrid = solvedGrid;\n      state.challengeGrid = challengeGrid;\n      state.actualRemainingBlocks = actualRemainingBlocks;\n      state.remainingBlocks = remainingBlocks;\n      state.moves = 0;\n      state.loading = false;\n      state.selectedBlock = null;\n      state.victoryModalOpen = false;\n    },\n    resetGame(state) {\n      state.activeGrid = state.challengeGrid;\n      state.remainingBlocks = state.actualRemainingBlocks;\n      state.moves = 0;\n      state.selectedBlock = null;\n      state.victoryModalOpen = false;\n    },\n    selectBlock(state, action: PayloadAction<Block>) {\n      state.selectedBlock = action.payload;\n    },\n    setDifficulty(state, action: PayloadAction<difficultyLevel>) {\n      state.difficulty = action.payload;\n    },\n    closeModal(state) {\n      state.victoryModalOpen = false;\n    },\n    startLoading(state) {\n      state.loading = true;\n    },\n    toggleHideClues(state) {\n      state.hideClues = !state.hideClues;\n    },\n    fillBlock(\n      state,\n      { payload: { row, col, value } }: PayloadAction<FilledBlock>\n    ) {\n      const previousValue = state.activeGrid[row][col];\n      if (!previousValue) {\n        state.remainingBlocks--;\n      }\n      if (value !== previousValue && !state.victoryModalOpen) {\n        state.moves++;\n      }\n\n      state.activeGrid[row][col] = value as N;\n      if (!state.remainingBlocks) {\n        const isCorrect = checkSolution(state.activeGrid, state.solvedGrid);\n        if (isCorrect) {\n          state.victoryModalOpen = true;\n        }\n      }\n    },\n  },\n});\n\nconst newGameFromWorker = (): NewGameWorkerAction => {\n  return {\n    type: CREATE_NEW_GAME_IN_WORKER,\n    worker: true,\n    successActionType: gridSlice.actions.startNewGame.toString(),\n  };\n};\nnewGameFromWorker.toString = () => CREATE_NEW_GAME_IN_WORKER;\nexport { newGameFromWorker };\n\nexport const {\n  actions: {\n    startNewGame,\n    selectBlock,\n    fillBlock,\n    resetGame,\n    startLoading,\n    setDifficulty,\n    closeModal,\n    toggleHideClues,\n  },\n  reducer: gridReducer,\n} = gridSlice;\n","import { Grid } from 'types';\n\nexport const checkSolution = (userGrid: Grid, solutionGrid: Grid) => {\n  const userList = userGrid.flat(1);\n  const solutionList = solutionGrid.flat(1);\n  return solutionList.every((value, index) => value === userList[index]);\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { UserTheme } from 'types';\n\ninterface UserPrefState {\n  theme: UserTheme;\n}\n\nconst initialState: UserPrefState = {\n  theme: 'light',\n};\n\nconst userPrefSlice = createSlice({\n  name: 'userPref',\n  initialState,\n  reducers: {\n    setTheme(state, action: PayloadAction<UserTheme>) {\n      state.theme = action.payload;\n    },\n  },\n});\n\nexport const {\n  actions: { setTheme },\n  reducer: userPrefReducer,\n} = userPrefSlice;\n","import React, { FC, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport Modal from 'react-modal';\nimport TopBarProgress from 'react-topbar-progress-indicator';\n\nimport { SudokuGrid } from 'components/sudokuGrid';\nimport { NumberGroup } from 'components/numberGroup';\nimport { Difficulty } from 'components/difficulty';\nimport { ConfigurationGroup } from 'components/configGroup';\nimport { DarkToggleButton } from 'components/styled';\nimport { Button } from 'components/styled';\nimport { Paragraph } from 'components/styled';\nimport { ReactComponent as MoonIcon } from 'assets/icons/moon.svg';\nimport { ReactComponent as SunIcon } from 'assets/icons/sun.svg';\nimport {\n  fillBlock,\n  selectBlock,\n  resetGame,\n  closeModal,\n  setDifficulty,\n  startLoading,\n  toggleHideClues,\n  newGameFromWorker,\n} from 'slices/gridSlice';\nimport { setTheme } from 'slices/userPrefSlice';\nimport { Block, FilledBlock, Status, difficultyLevel, UserTheme } from 'types';\nimport { RootState } from 'app/rootReducer';\nimport {\n  isUserFillableBlock,\n  isCorrectValue,\n  isBlockEmpty,\n  isNeighbor,\n} from 'utils';\n\nModal.setAppElement('#root');\n\nconst GameContainer = styled.main``;\nconst ModalContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  background-color: ${({ theme }) => theme.colors.background};\n`;\nconst ModalButton = styled(Button)`\n  font-size: 2.5rem;\n  text-transform: uppercase;\n  margin-top: 1.5rem;\n  padding: 1.5rem;\n`;\n\nconst ModalCloseButton = styled(Button)`\n  border: none;\n  padding: 1rem;\n  font-size: 4.5rem;\n  position: absolute;\n  top: 0.5rem;\n  right: 0.5rem;\n`;\n\nconst ModalParagraph = styled(Paragraph)`\n  font-weight: 400;\n  font-size: 3rem;\n`;\n\ninterface IGameProps {\n  theme: UserTheme;\n}\n\nexport type INumberSelected = (value: string) => void;\nexport type IGetStatus = (block: FilledBlock) => Status;\nexport type ISelectBlock = (block: Block) => ReturnType<typeof selectBlock>;\nexport type IStartNewGame = () => void;\nexport type IResetGame = () => ReturnType<typeof resetGame>;\nexport type IToggleHideClues = () => ReturnType<typeof toggleHideClues>;\nexport type ISetDifficulty = (\n  level: difficultyLevel\n) => ReturnType<typeof setDifficulty>;\n\nexport const Game: FC<IGameProps> = ({ theme }) => {\n  const dispatch = useDispatch();\n\n  const grid = useSelector((state: RootState) => state.gridReducer.activeGrid);\n\n  const solvedGrid = useSelector(\n    (state: RootState) => state.gridReducer.solvedGrid\n  );\n  const challengeGrid = useSelector(\n    (state: RootState) => state.gridReducer.challengeGrid\n  );\n  const selectedBlock = useSelector(\n    (state: RootState) => state.gridReducer.selectedBlock\n  );\n  const currentDifficulty = useSelector(\n    (state: RootState) => state.gridReducer.difficulty\n  );\n\n  const hideClues = useSelector(\n    (state: RootState) => state.gridReducer.hideClues\n  );\n\n  const isLoading = useSelector(\n    (state: RootState) => state.gridReducer.loading\n  );\n\n  const modalOpened = useSelector(\n    (state: RootState) => state.gridReducer.victoryModalOpen\n  );\n\n  const totalMoves = useSelector((state: RootState) => state.gridReducer.moves);\n\n  const selectBlockAction = useCallback(\n    (block: Block) => dispatch(selectBlock(block)),\n    [dispatch]\n  );\n\n  const setThemeAction = (mode: UserTheme) =>\n    mode === 'light' ? dispatch(setTheme('dark')) : dispatch(setTheme('light'));\n\n  const newGameAction = useCallback(() => {\n    dispatch(startLoading());\n    dispatch(newGameFromWorker());\n  }, [dispatch]);\n  const resetGameAction = useCallback(() => dispatch(resetGame()), [dispatch]);\n\n  const closeModalAction = useCallback(() => dispatch(closeModal()), [\n    dispatch,\n  ]);\n\n  const toggleHideCluesAction = useCallback(() => dispatch(toggleHideClues()), [\n    dispatch,\n  ]);\n\n  const setDifficultyAction = useCallback(\n    (difficulty: difficultyLevel) => dispatch(setDifficulty(difficulty)),\n    [dispatch]\n  );\n\n  const getStatus = useCallback(\n    (block: FilledBlock): Status => {\n      if (isUserFillableBlock(block, challengeGrid)) {\n        if (hideClues && !isBlockEmpty(block.value)) {\n          return 'normal';\n        }\n\n        if (isCorrectValue(block, solvedGrid) && !isBlockEmpty(block.value)) {\n          return 'correct';\n        }\n\n        if (!isCorrectValue(block, solvedGrid) && !isBlockEmpty(block.value)) {\n          return 'incorrect';\n        }\n      }\n\n      if (selectedBlock && isNeighbor(selectedBlock, block)) {\n        return 'highlight';\n      }\n\n      if (\n        selectedBlock &&\n        selectedBlock.row === block.row &&\n        selectedBlock.col === block.col\n      ) {\n        return 'active';\n      }\n\n      return 'normal';\n    },\n    [challengeGrid, solvedGrid, selectedBlock, hideClues,]\n  );\n\n  const onNumberSelected = useCallback(\n    (value: string) => {\n      if (selectedBlock && isUserFillableBlock(selectedBlock, challengeGrid)) {\n        dispatch(\n          fillBlock({\n            row: selectedBlock.row,\n            col: selectedBlock.col,\n            value: parseInt(value),\n          })\n        );\n      }\n    },\n    [dispatch, selectedBlock, challengeGrid]\n  );\n\n  const customModalStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      padding: '0',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-30%',\n      height: '60%',\n      width: '80%',\n      borderRadius: '0',\n      transform: 'translate(-50%, -50%)',\n    },\n  };\n\n  return (\n    <GameContainer>\n      {isLoading && <TopBarProgress />}\n      <DarkToggleButton mode={theme} onClick={() => setThemeAction(theme)}>\n        <SunIcon />\n        <MoonIcon />\n      </DarkToggleButton>\n      <ConfigurationGroup\n        startNewGame={newGameAction}\n        resetGame={resetGameAction}\n        toggleHideClues={toggleHideCluesAction}\n      />\n      <Difficulty\n        currentLevel={currentDifficulty}\n        setDifficulty={setDifficultyAction}\n      />\n      <SudokuGrid\n        selectedBlock={selectedBlock}\n        grid={grid}\n        getStatus={getStatus}\n        selectBlock={selectBlockAction}\n        onNumberSelected={onNumberSelected}\n      />\n      <NumberGroup onNumberSelected={onNumberSelected} />\n      <Modal\n        isOpen={modalOpened}\n        onRequestClose={closeModalAction}\n        shouldCloseOnOverlayClick={true}\n        shouldCloseOnEsc={true}\n        style={customModalStyles}\n        contentLabel=\"You won\"\n      >\n        <ModalContainer>\n          <ModalCloseButton onClick={closeModalAction}>\n            &times;\n          </ModalCloseButton>\n          <ModalParagraph>You won!</ModalParagraph>\n          <ModalParagraph>Total Moves: {totalMoves}</ModalParagraph>\n          <ModalButton onClick={newGameAction}>Play Again</ModalButton>\n        </ModalContainer>\n      </Modal>\n    </GameContainer>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\n\nimport { Title, Layout, Paragraph } from 'components/styled';\nimport { Game } from 'components/game';\nimport { GlobalStyles, lightTheme, darkTheme } from 'styles';\nimport { RootState } from './rootReducer';\nimport { UserTheme } from 'types';\n\nexport const App = () => {\n  const userTheme = useSelector(\n    (state: RootState) => state.userPrefReducer.theme\n  );\n\n  const getUserTheme = (mode: UserTheme) =>\n    mode === 'dark' ? darkTheme : lightTheme;\n\n  return (\n    <ThemeProvider theme={getUserTheme(userTheme)}>\n      <GlobalStyles />\n      <Layout>\n        <Title>Minimal Sudoku</Title>\n        <Game theme={userTheme} />\n        <Paragraph>Use arrow keys or mouse to play</Paragraph>\n      </Layout>\n    </ThemeProvider>\n  );\n};\n","import { combineReducers } from '@reduxjs/toolkit';\n\nimport { gridReducer } from '../slices/gridSlice';\nimport { userPrefReducer } from '../slices/userPrefSlice';\n\nexport const rootReducer = combineReducers({ gridReducer, userPrefReducer });\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport SudokuWorker from 'worker-loader!../worker/sudoku.worker.ts';\n\nimport { rootReducer } from './rootReducer';\nimport { saveState, loadState } from 'utils';\nimport { applyWorker } from 'workerize-redux';\n\nconst sudokuWorker = new SudokuWorker() as Worker;\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  devTools: process.env.NODE_ENV !== 'production',\n  preloadedState: loadState(),\n  middleware: [...getDefaultMiddleware(), applyWorker(sudokuWorker)],\n});\n\nstore.subscribe(() => {\n  const gridReducer = store.getState().gridReducer;\n  const newGridReducer = {\n    ...gridReducer,\n    selectedBlock: null,\n    victoryModalOpen: false,\n  };\n  saveState({ ...store.getState(), gridReducer: newGridReducer });\n});\n\nexport type AppDispatch = typeof store.dispatch;\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/sudoku.worker.8a5d7f82.worker.js\");\n}\n","import { RootState } from '../app/rootReducer';\n\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('sudokuState');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState) as RootState;\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state: RootState) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('sudokuState', serializedState);\n  } catch (err) {\n    console.error('Error occurred while saving into local storage', err);\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { register } from 'core/serviceWorker';\nimport { App } from 'app/App';\nimport { store } from 'app/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nregister();\n"],"sourceRoot":""}